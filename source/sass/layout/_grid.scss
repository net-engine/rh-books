@mixin fraction-width( $span, $total ) {
  @include box-sizing( border-box );
  display: inline-block;
  vertical-align: top;
  width: 100% / $total * $span;
  margin-right: -0.25em;
}

.one-half {
  @include fraction-width(1, 2);

  &:first-child {
    padding-left: 0;
    padding-right: $gutter / 2;
  }
  &:last-child {
    padding-right: 0;
    padding-left: $gutter / 2;
  }

  &:nth-child(odd) {
    padding-left: 0;
    padding-right: $gutter / 2;
  }
  &:nth-child(even) {
    padding-right: 0;
    padding-left: $gutter / 2;
  }

  &.first {
    padding-left: 0;
    padding-right: $gutter / 2;
  }
  &.last {
    padding-right: 0;
    padding-left: $gutter / 2;
  }
}

// Thirds

.one-third {
  @include fraction-width(1, 3);
  
  padding-left: $gutter * 0.667; 
  padding-right: $gutter * 0.667; 

  &:nth-child(3n+3) {
    padding-left: $gutter / 3;
    padding-right: 0;
  }
  &:nth-child(3n+1) {
    padding-left: 0;
    padding-right: $gutter / 3;
  }
  
  &.first {
    padding-left: 0;
    padding-right: $gutter / 3;
  }
  &.second {
    padding-left: $gutter * 0.667; 
    padding-right: $gutter * 0.667; 
  }
  &.third, &.last {
    padding-left: $gutter / 3;
    padding-right: 0;
  }
}

.two-thirds {
  @include fraction-width(2, 3);

  &.first {
    padding-left: 0;
    padding-right: $gutter * 0.333;
  }
  &.last {
    padding-right: 0;
    padding-left: $gutter * 0.333;
  }
}

// Quarters

.one-quarter {
  @include fraction-width(1, 4);

  &:nth-child(4n+1) {
    padding-left: 0;
    padding-right: $gutter * 0.75;
  }
  &:nth-child(4n+2) { 
    padding-right: $gutter * 0.50;
    padding-left: $gutter * 0.25; 
  }
  &:nth-child(4n+3) { 
    padding-right: $gutter * 0.25;
    padding-left: $gutter * 0.50; 
  }
  &:nth-child(4n+4) {
    padding-left: $gutter * 0.75;
    padding-right: 0;
  }

  &.first {
    padding-left: 0;
    padding-right: $gutter * 0.75;
  }
  &.second { 
    padding-right: $gutter * 0.50;
    padding-left: $gutter * 0.25; 
  }
  &.third { 
    padding-right: $gutter * 0.25;
    padding-left: $gutter * 0.50; 
  }
  &.fourth, &.last {
    padding-left: $gutter * 0.75;
    padding-right: 0;
  }  
}

.three-quarters {
  @include fraction-width(3, 4);

  &:first-child { 
    padding-left: 0;
    padding-right: $gutter * 0.25;
  }

  &:last-child { 
    padding-left: $gutter * 0.25;
    padding-right: 0;
  }
}

// Responsive

@media screen and (max-width: $breakpoint-small) {
  .one-half, .two-thirds, .three-quarters {
    &:not(.no-break):not(.break-mobile) {
      width: 100%;
      padding-left: 0;
      padding-right: 0;
    }
  }

  .one-quarter, .one-third {
    &:not(.no-break):not(.break-mobile) {
      width: 50%;
      padding-left: $gutter / 2;
      padding-right: $gutter / 2;
      &:nth-child(odd) { padding-left: 0 }
      &:nth-child(even) { padding-right: 0 }
    }
  }

  .one-half .one-quarter, .one-half .three-quarters {
    &:not(.no-break):not(.break-mobile) {
      padding-left: $gutter / 2;
      padding-right: $gutter / 2;

      &.first { padding-left: 0; }
      &.last { padding-right: 0; }
    }
  }

  .one-half .one-quarter:not(.no-break):not(.break-mobile) { width: 25%; }
  .one-half .three-quarters:not(.no-break):not(.break-mobile) { width: 75%; }
}

@media screen and (max-width: $breakpoint-small) {
  .one-half, .one-third, .two-thirds, .one-quarter, .three-quarters {
    &:not(.no-break) {
      width: 100% !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
    }
  }
  .one-half .one-quarter {
    &:not(.no-break) {
      width: 25%;
    }
  }
  .one-half .three-quarters {
    &:not(.no-break) {
      width: 75%;
    }
  }
}
